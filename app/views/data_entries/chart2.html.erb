<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sensors Chart</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    h1 {
      text-align: center;
      color: #007bff;
      margin-bottom: 20px;
    }
    .chart-container {
      width: 80%;
      margin: 0 auto;
      padding: 20px;
      border: 1px solid #dee2e6;
      border-radius: 8px;
      background-color: #f8f9fa;
    }
    canvas {
      max-width: 100%;
      height: 400px;
    }
  </style>
</head>
<body>
  <h1>Sensors Data Chart</h1>
  <div class="chart-container">
    <canvas id="sensorChart"></canvas>
  </div>

  <script>
    // Backend data passed via JSON (replace @data_by_sensor with ERB data)
    const sensorData = <%= @data_by_sensor.to_json.html_safe %>;

    // Extract data for Chart.js
    const labels = []; // Timestamps for the x-axis
    const datasets = []; // Data for each sensor

    Object.entries(sensorData).forEach(([sensorSerial, data], index) => {
      const timestamps = data.map(entry => new Date(entry.timestamp).toLocaleString());
      const values = data.map(entry => entry.value);

      // Update global labels if they are not already set
      if (labels.length === 0) labels.push(...timestamps);

      // Add a dataset for each sensor
      datasets.push({
        label: `Sensor ${sensorSerial}`,
        data: values,
        borderColor: `hsl(${(index * 60) % 360}, 70%, 50%)`,
        backgroundColor: `hsl(${(index * 60) % 360}, 70%, 90%)`,
        fill: false,
        tension: 0.1
      });
    });

    // Render the chart
    const ctx = document.getElementById('sensorChart').getContext('2d');
    new Chart(ctx, {
      type: 'line',
      data: {
        labels: labels,
        datasets: datasets
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'top'
          },
          title: {
            display: true,
            text: 'Sensor Historical Data Comparison'
          }
        },
        scales: {
          x: {
            title: {
              display: true,
              text: 'Timestamp'
            }
          },
          y: {
            title: {
              display: true,
              text: 'Value'
            },
            beginAtZero: true
          }
        }
      }
    });
  </script>
</body>
</html>
